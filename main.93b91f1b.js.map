{"version":3,"sources":["scripts/main.js"],"names":["wall","document","querySelector","spider","limitCoord","coord","max","min","Math","addEventListener","e","borderW","parseFloat","getComputedStyle","borderWidth","spiderW","offsetWidth","spiderH","offsetHeight","leftEdge","getBoundingClientRect","left","topEdge","top","maxX","clientWidth","maxY","clientHeight","target","classList","contains","spiderX","clientX","spiderY","clientY","style"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASC,cAAc,WAyBtC,SAASE,EAAWC,EAAOC,GAAKC,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EAC7BC,OAAAA,KAAKF,IAAID,EAAOE,GAAOA,EAAMC,KAAKD,IAAIF,EAAOC,GAAOC,EAxB7DN,SAASQ,iBAAiB,QAAS,SAAAC,GAC3BC,IAAAA,EAAUC,WAAWC,iBAAiBb,GAAMc,aAC5CC,EAAUZ,EAAOa,YACjBC,EAAUd,EAAOe,aACjBC,EAAWnB,EAAKoB,wBAAwBC,KAAOV,EAC/CW,EAAUtB,EAAKoB,wBAAwBG,IAAMZ,EAC7Ca,EAAOxB,EAAKyB,YAAcV,EAC1BW,EAAO1B,EAAK2B,aAAeV,EAE7B,GAACP,EAAEkB,OAAOC,UAAUC,SAAS,QAA7B,CAIAC,IAAAA,EAAUrB,EAAEsB,QAAUb,EAAYJ,EAAU,EAC5CkB,EAAUvB,EAAEwB,QAAUZ,EAAWL,EAAU,EAE/Cc,EAAU3B,EAAW2B,EAASP,GAC9BS,EAAU7B,EAAW6B,EAASP,GAE9BvB,EAAOgC,MAAMZ,IAASU,GAAAA,OAAAA,EAAtB,MACA9B,EAAOgC,MAAMd,KAAUU,GAAAA,OAAAA,EAAvB","file":"main.93b91f1b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst wall = document.querySelector('.wall');\r\nconst spider = document.querySelector('.spider');\r\n\r\ndocument.addEventListener('click', e => {\r\n  const borderW = parseFloat(getComputedStyle(wall).borderWidth);\r\n  const spiderW = spider.offsetWidth;\r\n  const spiderH = spider.offsetHeight;\r\n  const leftEdge = wall.getBoundingClientRect().left + borderW;\r\n  const topEdge = wall.getBoundingClientRect().top + borderW;\r\n  const maxX = wall.clientWidth - spiderW;\r\n  const maxY = wall.clientHeight - spiderH;\r\n\r\n  if (!e.target.classList.contains('wall')) {\r\n    return;\r\n  }\r\n\r\n  let spiderX = e.clientX - leftEdge - (spiderW / 2);\r\n  let spiderY = e.clientY - topEdge - (spiderH / 2);\r\n\r\n  spiderX = limitCoord(spiderX, maxX);\r\n  spiderY = limitCoord(spiderY, maxY);\r\n\r\n  spider.style.top = `${spiderY}px`;\r\n  spider.style.left = `${spiderX}px`;\r\n});\r\n\r\nfunction limitCoord(coord, max, min = 0) {\r\n  return Math.max(coord, min) > min ? Math.min(coord, max) : min;\r\n}\r\n"]}